# -*- coding: utf-8 -*-
"""Credict Card fraud Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tqO0s18LfXbBU9KIx2gbuAKt9cJYtp6x
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score

data=pd.read_csv('data.csv')

data.head()

data.shape

data.tail()

data.info()

data.isnull().sum()

data['Class'].value_counts()

legit=data[data.Class == 0]
fraud=data[data.Class == 1]

print (legit.shape)
print (fraud.shape)

legit['Amount'].describe()

fraud["Amount"].describe()

data.groupby('Class').mean()

legit_sample=legit.sample(n=492)

data=pd.concat([legit_sample,fraud],axis=0)

data.head()

data.tail()

data['Class'].value_counts()

data.groupby('Class').mean()

X=data.drop('Class',axis=1)
Y=data['Class']

print(X)

print(Y)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

model=LogisticRegression()

model.fit(X_train,Y_train)

# accuracy on training data
X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print('Accuracy on Training data : ', training_data_accuracy)

# accuracy on test data
X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print('Accuracy score on Test Data : ', test_data_accuracy)

